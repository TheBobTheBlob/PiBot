import os
from dataclasses import dataclass

import discord
from dotenv import load_dotenv

load_dotenv()


PREFIX = os.environ["PREFIX"]
try:
    COLOR = discord.Color.from_str("#BFB4A0")
except ValueError:
    COLOR = discord.Color.blurple()


class PiEmbed:
    def __init__(
        self, embed, view: None | discord.ui.View = None, file: None | discord.File = None, ephemeral: bool = False
    ):
        self.embed = embed
        self.view = view
        self.file = file
        self.ephemeral = ephemeral

        self.embed.color = COLOR


@dataclass
class CommandHelp:
    name: str
    description: str
    context_menu: bool = False


@dataclass
class CommandCategory:
    name: str
    description: str
    commands: list[CommandHelp]
    for_admin: bool = False


commands = [
    CommandCategory(
        "Facts",
        "Commands that give you a fact.",
        commands=[
            CommandHelp(name="dailyfact", description="Shows the fact of the day"),
            CommandHelp(name="shipfact", description="Get a random **fake** ship fact generated by AI"),
        ],
    ),
    CommandCategory(
        "Images",
        "Commands that work on images.",
        commands=[
            CommandHelp(name="Describe", description="Describe the content of an image", context_menu=True),
            CommandHelp(name="Rate Meme", description="Find how good your meme is, and why", context_menu=True),
        ],
    ),
    CommandCategory(
        name="Miscellaneous",
        description="Other commands available to use.",
        commands=[
            CommandHelp(name="ask", description="Ask me (nearly) anything"),
            CommandHelp(name="Summarise", description="Summarise a message", context_menu=True),
            CommandHelp(name="info", description="Shows basic information about this bot"),
            CommandHelp(name="help", description="Shows this help message"),
        ],
    ),
    CommandCategory(
        name="Admin",
        description="Commands for the bot administrator. Not accessible via slash commands, type them out as a normal message.",
        commands=[
            CommandHelp(name="admin sync", description="Sync slash commands"),
        ],
        for_admin=True,
    ),
]


async def help_embed(is_admin: bool) -> PiEmbed:
    embed = discord.Embed(
        title="PiBot Help",
        description="List of commands available to you. Commands starting with / are accessible via slash commands, while the others are accessible via the application commands menu.",
    )

    for category in commands:
        if category.for_admin and not is_admin:
            continue

        text = category.description

        for command in category.commands:
            text += f"\n- `{'' if command.context_menu else PREFIX}{command.name}` {command.description}"

        embed.add_field(name=category.name, value=text, inline=False)

    return PiEmbed(embed=embed)


async def info_embed() -> PiEmbed:
    embed = discord.Embed(
        title="PiBot Information",
        description="PiBot is a custom Discord bot for the Nu Deuteron chapter of Alpha Epsilon Pi",
    )

    file = discord.File("static/logo.jpg", filename="logo.jpg")
    embed.set_thumbnail(url="attachment://logo.jpg")

    embed.add_field(name="Repository", value="https://github.com/TheBobTheBlob/PiBot")
    embed.add_field(name="Birthday", value="December 13, 2023")
    embed.add_field(name="Version", value="1.1.0")

    return PiEmbed(embed=embed, file=file)


async def error_embed(message: str) -> PiEmbed:
    embed = discord.Embed(title="Error", description=message)
    return PiEmbed(embed=embed, ephemeral=True)
